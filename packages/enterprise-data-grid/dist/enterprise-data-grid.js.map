{"version":3,"file":"enterprise-data-grid.js","sources":["webpack://SiticGridEnterpriseDataGrid/webpack/runtime/compat_get_default_export","webpack://SiticGridEnterpriseDataGrid/webpack/runtime/define_property_getters","webpack://SiticGridEnterpriseDataGrid/webpack/runtime/has_own_property","webpack://SiticGridEnterpriseDataGrid/./src/EnterpriseDataGrid.tsx"],"sourcesContent":["// getDefaultExport function for compatibility with non-ESM modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};\n","__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import React, { useEffect, useRef, useState } from 'react';\r\n\r\n// Utility: classnames joiner\r\nfunction cn(...classes: Array<string | false | undefined>): string {\r\n  return classes.filter(Boolean).join(' ');\r\n}\r\n\r\n// Minimal date helpers to avoid external deps\r\nfunction parseISO(value: string): Date { return new Date(value); }\r\nfunction isBefore(a: Date, b: Date): boolean { return a.getTime() < b.getTime(); }\r\nfunction formatDate(date: Date): string {\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const month = date.toLocaleString('es-ES', { month: 'short' });\r\n  const year = date.getFullYear();\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  return `${day} ${month} ${year} ${hours}:${minutes}`;\r\n}\r\n\r\n// Icons and UI primitives adapted from v0\r\nconst ChevronUpIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <polyline points=\"18 15 12 9 6 15\"></polyline>\r\n  </svg>\r\n);\r\n\r\nconst ChevronDownIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <polyline points=\"6 9 12 15 18 9\"></polyline>\r\n  </svg>\r\n);\r\n\r\nconst FilterIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <polygon points=\"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\"></polygon>\r\n  </svg>\r\n);\r\n\r\nconst MoreVerticalIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\r\n    <circle cx=\"12\" cy=\"5\" r=\"1\"></circle>\r\n    <circle cx=\"12\" cy=\"19\" r=\"1\"></circle>\r\n  </svg>\r\n);\r\n\r\nconst ZapIcon = () => (\r\n  <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <polygon points=\"13 2 3 14 12 14 11 22 21 10 12 10 13 2\"></polygon>\r\n  </svg>\r\n);\r\n\r\nconst RefreshCwIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <polyline points=\"23 4 23 10 17 10\"></polyline>\r\n    <polyline points=\"1 20 1 14 7 14\"></polyline>\r\n    <path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\"></path>\r\n  </svg>\r\n);\r\n\r\nconst DownloadIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n    <polyline points=\"7 10 12 15 17 10\"></polyline>\r\n    <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\r\n  </svg>\r\n);\r\n\r\nconst AlertCircleIcon = () => (\r\n  <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n    <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n    <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n  </svg>\r\n);\r\n\r\nconst ColumnsIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\r\n    <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"21\"></line>\r\n  </svg>\r\n);\r\n\r\nconst EyeOffIcon = () => (\r\n  <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"></path>\r\n    <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>\r\n  </svg>\r\n);\r\n\r\nconst ChevronLeftIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <polyline points=\"15 18 9 12 15 6\"></polyline>\r\n  </svg>\r\n);\r\n\r\nconst ChevronRightIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <polyline points=\"9 18 15 12 9 6\"></polyline>\r\n  </svg>\r\n);\r\n\r\nconst ChevronsLeftIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <polyline points=\"11 17 6 12 11 7\"></polyline>\r\n    <polyline points=\"18 17 13 12 18 7\"></polyline>\r\n  </svg>\r\n);\r\n\r\nconst ChevronsRightIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <polyline points=\"13 17 18 12 13 7\"></polyline>\r\n    <polyline points=\"6 17 11 12 6 7\"></polyline>\r\n  </svg>\r\n);\r\n\r\nconst XIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n  </svg>\r\n);\r\n\r\nconst Button = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ButtonHTMLAttributes<HTMLButtonElement> & { variant?: string; size?: string }\r\n>(({ className, variant, size, ...props }, ref) => {\r\n  return (\r\n    <button\r\n      className={cn(\r\n        'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\r\n        variant === 'ghost' && 'hover:bg-accent hover:text-accent-foreground',\r\n        variant === 'outline' && 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\r\n        size === 'sm' && 'h-8 px-3 text-xs',\r\n        size === 'icon' && 'h-8 w-8',\r\n        className,\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nButton.displayName = 'Button';\r\n\r\nconst Badge = ({ className, variant, ...props }: React.HTMLAttributes<HTMLDivElement> & { variant?: string }) => {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\r\n        variant === 'secondary' && 'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\r\n        variant === 'outline' && 'text-foreground',\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst DropdownMenu = ({ children }: { children: React.ReactNode }) => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div className=\"relative inline-block\">\r\n      {React.Children.map(children, (child) =>\r\n        React.isValidElement(child) ? React.cloneElement(child as React.ReactElement<any>, { open, setOpen }) : child,\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DropdownMenuTrigger = ({\r\n  children,\r\n  open,\r\n  setOpen,\r\n}: {\r\n  children: React.ReactNode;\r\n  open?: boolean;\r\n  setOpen?: (open: boolean) => void;\r\n}) => {\r\n  return (\r\n    <div onClick={() => setOpen?.(!open)} className=\"cursor-pointer\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DropdownMenuContent = ({\r\n  children,\r\n  open,\r\n  setOpen,\r\n  align = 'end',\r\n}: {\r\n  children: React.ReactNode;\r\n  open?: boolean;\r\n  setOpen?: (open: boolean) => void;\r\n  align?: string;\r\n}) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (ref.current && !ref.current.contains(event.target as Node)) {\r\n        setOpen?.(false);\r\n      }\r\n    };\r\n    if (open) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, [open, setOpen]);\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        'absolute z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md',\r\n        align === 'end' && 'right-0',\r\n        align === 'start' && 'left-0',\r\n      )}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DropdownMenuItem = ({\r\n  children,\r\n  onClick,\r\n  className,\r\n}: {\r\n  children: React.ReactNode;\r\n  onClick?: () => void;\r\n  className?: string;\r\n}) => {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'relative flex cursor-pointer select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground',\r\n        className,\r\n      )}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DropdownMenuCheckboxItem = ({\r\n  children,\r\n  checked,\r\n  onCheckedChange,\r\n}: {\r\n  children: React.ReactNode;\r\n  checked?: boolean;\r\n  onCheckedChange?: (checked: boolean) => void;\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"relative flex cursor-pointer select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground\"\r\n      onClick={() => onCheckedChange?.(!checked)}\r\n    >\r\n      <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n        {checked && <span className=\"h-2 w-2 rounded-sm bg-current\" />}\r\n      </span>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DropdownMenuSeparator = () => {\r\n  return <div className=\"-mx-1 my-1 h-px bg-muted\" />;\r\n};\r\n\r\nconst DropdownMenuLabel = ({ children }: { children: React.ReactNode }) => {\r\n  return <div className=\"px-2 py-1.5 text-sm font-semibold\">{children}</div>;\r\n};\r\n\r\nconst Tooltip = ({ children }: { children: React.ReactNode }) => {\r\n  return <div className=\"relative inline-block\">{children}</div>;\r\n};\r\n\r\nconst TooltipTrigger = ({ children }: { children: React.ReactNode }) => {\r\n  return <div className=\"inline-block\">{children}</div>;\r\n};\r\n\r\nconst TooltipContent = ({ children }: { children: React.ReactNode }) => {\r\n  return (\r\n    <div className=\"absolute bottom-full left-1/2 z-50 mb-2 -translate-x-1/2 rounded-md bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.InputHTMLAttributes<HTMLInputElement>>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        className={cn(\r\n          'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\r\n          className,\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nInput.displayName = 'Input';\r\n\r\nconst Select = ({\r\n  value,\r\n  onValueChange,\r\n  children,\r\n}: {\r\n  value: string;\r\n  onValueChange: (value: string) => void;\r\n  children: React.ReactNode;\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div className=\"relative inline-block\">\r\n      {React.Children.map(children, (child) =>\r\n        React.isValidElement(child)\r\n          ? React.cloneElement(child as React.ReactElement<any>, { value, onValueChange, open, setOpen })\r\n          : child,\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectTrigger = ({\r\n  children,\r\n  open,\r\n  setOpen,\r\n  className,\r\n}: {\r\n  children: React.ReactNode;\r\n  open?: boolean;\r\n  setOpen?: (open: boolean) => void;\r\n  className?: string;\r\n}) => {\r\n  return (\r\n    <button\r\n      onClick={() => setOpen?.(!open)}\r\n      className={cn(\r\n        'flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\r\n        className,\r\n      )}\r\n    >\r\n      {children}\r\n      <ChevronDownIcon />\r\n    </button>\r\n  );\r\n};\r\n\r\nconst SelectValue = ({ placeholder, value }: { placeholder?: string; value?: string }) => {\r\n  return <span>{value || placeholder}</span>;\r\n};\r\n\r\nconst SelectContent = ({\r\n  children,\r\n  open,\r\n  setOpen,\r\n  onValueChange,\r\n}: {\r\n  children: React.ReactNode;\r\n  open?: boolean;\r\n  setOpen?: (open: boolean) => void;\r\n  onValueChange?: (value: string) => void;\r\n}) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (ref.current && !ref.current.contains(event.target as Node)) {\r\n        setOpen?.(false);\r\n      }\r\n    };\r\n    if (open) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, [open, setOpen]);\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className=\"absolute z-50 mt-1 max-h-60 w-full overflow-auto rounded-md border bg-popover text-popover-foreground shadow-md\"\r\n    >\r\n      {React.Children.map(children, (child) =>\r\n        React.isValidElement(child)\r\n          ? React.cloneElement(child as React.ReactElement<any>, { onValueChange, setOpen })\r\n          : child,\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectItem = ({\r\n  value,\r\n  children,\r\n  onValueChange,\r\n  setOpen,\r\n}: {\r\n  value: string;\r\n  children: React.ReactNode;\r\n  onValueChange?: (value: string) => void;\r\n  setOpen?: (open: boolean) => void;\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"relative flex cursor-pointer select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none hover:bg-accent hover:text-accent-foreground\"\r\n      onClick={() => {\r\n        onValueChange?.(value);\r\n        setOpen?.(false);\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Types for v0\r\nexport interface Column {\r\n  key: string;\r\n  label: string;\r\n  sortable?: boolean;\r\n  filterable?: boolean;\r\n  type?: 'text' | 'number' | 'date' | 'currency' | 'status';\r\n  fixed?: boolean;\r\n}\r\n\r\nexport interface DataRow { [key: string]: any }\r\n\r\nexport interface EnterpriseDataGridProps {\r\n  columns: Column[];\r\n  data: DataRow[];\r\n  enableHyperlinks?: boolean;\r\n  onView?: (row: DataRow) => void;\r\n  onEdit?: (row: DataRow) => void;\r\n  onDelete?: (row: DataRow) => void;\r\n  onQuickAction?: (row: DataRow) => void;\r\n  onRefresh?: () => void;\r\n  onDownload?: () => void;\r\n}\r\n\r\nexport const EnterpriseDataGrid: React.FC<EnterpriseDataGridProps> = ({\r\n  columns: initialColumns,\r\n  data,\r\n  enableHyperlinks = false,\r\n  onView,\r\n  onEdit,\r\n  onDelete,\r\n  onQuickAction,\r\n  onRefresh,\r\n  onDownload,\r\n}) => {\r\n  const defaultColumns: Column[] = [\r\n    { key: 'actions', label: '', sortable: false, filterable: false, fixed: true },\r\n    { key: 'id', label: 'ID', sortable: true, filterable: true, type: 'text', fixed: true },\r\n    ...initialColumns,\r\n  ];\r\n\r\n  const [columns, setColumns] = useState<Column[]>(defaultColumns);\r\n  const [sortConfig, setSortConfig] = useState<{ key: string; direction: 'asc' | 'desc' } | null>(null);\r\n  const [draggedColumn, setDraggedColumn] = useState<string | null>(null);\r\n  const [columnFilters, setColumnFilters] = useState<Record<string, string>>({});\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(20);\r\n  const [visibleColumns, setVisibleColumns] = useState<Set<string>>(new Set(defaultColumns.map((col) => col.key)));\r\n  const [columnWidths, setColumnWidths] = useState<Record<string, number>>({});\r\n  const [resizingColumn, setResizingColumn] = useState<string | null>(null);\r\n  const [startX, setStartX] = useState(0);\r\n  const [startWidth, setStartWidth] = useState(0);\r\n\r\n  const handleSort = (key: string) => {\r\n    let direction: 'asc' | 'desc' = 'asc';\r\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  const handleDragStart = (e: React.DragEvent, columnKey: string) => {\r\n    setDraggedColumn(columnKey);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'move';\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent, targetColumnKey: string) => {\r\n    e.preventDefault();\r\n    if (!draggedColumn || draggedColumn === targetColumnKey) return;\r\n\r\n    const newColumns = [...columns];\r\n    const draggedIndex = newColumns.findIndex((col) => col.key === draggedColumn);\r\n    const targetIndex = newColumns.findIndex((col) => col.key === targetColumnKey);\r\n\r\n    const [removed] = newColumns.splice(draggedIndex, 1);\r\n    newColumns.splice(targetIndex, 0, removed);\r\n\r\n    setColumns(newColumns);\r\n    setDraggedColumn(null);\r\n  };\r\n\r\n  const handleFilterChange = (columnKey: string, value: string) => {\r\n    setColumnFilters((prev) => ({\r\n      ...prev,\r\n      [columnKey]: value,\r\n    }));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const clearFilter = (columnKey: string) => {\r\n    setColumnFilters((prev) => {\r\n      const newFilters = { ...prev };\r\n      delete newFilters[columnKey];\r\n      return newFilters;\r\n    });\r\n  };\r\n\r\n  const handleResizeStart = (e: React.MouseEvent, columnKey: string) => {\r\n    e.preventDefault();\r\n    setResizingColumn(columnKey);\r\n    setStartX(e.clientX);\r\n    setStartWidth(columnWidths[columnKey] || 150);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = (e: MouseEvent) => {\r\n      if (resizingColumn) {\r\n        const diff = e.clientX - startX;\r\n        const newWidth = Math.max(80, startWidth + diff);\r\n        setColumnWidths((prev) => ({\r\n          ...prev,\r\n          [resizingColumn]: newWidth,\r\n        }));\r\n      }\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      setResizingColumn(null);\r\n    };\r\n\r\n    if (resizingColumn) {\r\n      document.addEventListener('mousemove', handleMouseMove);\r\n      document.addEventListener('mouseup', handleMouseUp);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, [resizingColumn, startX, startWidth]);\r\n\r\n  const filteredData = data.filter((row) => {\r\n    return Object.entries(columnFilters).every(([key, filterValue]) => {\r\n      const cellValue = String(row[key] || '').toLowerCase();\r\n      return cellValue.includes(filterValue.toLowerCase());\r\n    });\r\n  });\r\n\r\n  const sortedData = [...filteredData].sort((a, b) => {\r\n    if (!sortConfig) return 0;\r\n\r\n    const aValue = a[sortConfig.key];\r\n    const bValue = b[sortConfig.key];\r\n\r\n    const column = columns.find((col) => col.key === sortConfig.key);\r\n\r\n    if (column?.type === 'number' || column?.type === 'currency') {\r\n      const aNum = typeof aValue === 'number' ? aValue : Number.parseFloat(String(aValue).replace(/,/g, '')) || 0;\r\n      const bNum = typeof bValue === 'number' ? bValue : Number.parseFloat(String(bValue).replace(/,/g, '')) || 0;\r\n      return sortConfig.direction === 'asc' ? aNum - bNum : bNum - aNum;\r\n    }\r\n\r\n    if (column?.type === 'date') {\r\n      const aDate = new Date(aValue);\r\n      const bDate = new Date(bValue);\r\n      return sortConfig.direction === 'asc' ? aDate.getTime() - bDate.getTime() : bDate.getTime() - aDate.getTime();\r\n    }\r\n\r\n    const aStr = String(aValue).toLowerCase();\r\n    const bStr = String(bValue).toLowerCase();\r\n\r\n    if (aStr < bStr) return sortConfig.direction === 'asc' ? -1 : 1;\r\n    if (aStr > bStr) return sortConfig.direction === 'asc' ? 1 : -1;\r\n    return 0;\r\n  });\r\n\r\n  const totalPages = Math.ceil(sortedData.length / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n  const formatValue = (value: any, type?: string) => {\r\n    if (value === null || value === undefined) return '-';\r\n\r\n    switch (type) {\r\n      case 'date': {\r\n        try {\r\n          const date = typeof value === 'string' ? parseISO(value) : value;\r\n          const expired = isBefore(date, new Date());\r\n          return (\r\n            <div className={cn('flex items-center gap-1.5', expired && 'text-red-600 dark:text-red-400')}>\r\n              {expired && <AlertCircleIcon />}\r\n              {formatDate(date)}\r\n            </div>\r\n          );\r\n        } catch {\r\n          return String(value);\r\n        }\r\n      }\r\n      case 'currency':\r\n        return new Intl.NumberFormat('es-ES').format(value);\r\n      case 'status':\r\n        return (\r\n          <Badge\r\n            className={cn(\r\n              'text-xs opacity-100 shadow-md backdrop-blur-sm',\r\n              value === 'Active' &&\r\n                'border-green-200/50 bg-green-50/70 text-green-700 dark:border-green-800/50 dark:bg-green-950/70 dark:text-green-300',\r\n              value === 'Pending' &&\r\n                'border-yellow-200/50 bg-yellow-50/70 text-yellow-700 dark:border-yellow-800/50 dark:bg-yellow-950/70 dark:text-yellow-300',\r\n              value === 'Inactive' &&\r\n                'border-gray-200/50 bg-gray-50/70 text-gray-700 dark:border-gray-700/50 dark:bg-gray-900/70 dark:text-gray-300',\r\n            )}\r\n          >\r\n            {value}\r\n          </Badge>\r\n        );\r\n      default:\r\n        return String(value);\r\n    }\r\n  };\r\n\r\n  const visibleColumnsArray = columns.filter((col) => visibleColumns.has(col.key));\r\n\r\n  const totals: Record<string, number> = {};\r\n  columns.forEach((column) => {\r\n    if (column.type === 'currency') {\r\n      const total = sortedData.reduce((sum, row) => {\r\n        const v = row[column.key];\r\n        const num = typeof v === 'number' ? v : Number.parseFloat(String(v).replace(/,/g, '')) || 0;\r\n        return sum + num;\r\n      }, 0);\r\n      totals[column.key] = total;\r\n    }\r\n  });\r\n\r\n  const toggleColumnVisibility = (columnKey: string) => {\r\n    setVisibleColumns((prev) => {\r\n      const s = new Set(prev);\r\n      if (s.has(columnKey)) s.delete(columnKey); else s.add(columnKey);\r\n      return s;\r\n    });\r\n  };\r\n\r\n  const activeFiltersCount = Object.keys(columnFilters).length;\r\n\r\n  return (\r\n    <div className=\"flex h-screen flex-col bg-background\">\r\n      {/* Toolbar */}\r\n      <div className=\"flex items-center gap-2 border-b border-border bg-card px-4 py-3\">\r\n        <div className=\"flex items-center gap-2 ml-auto\">\r\n          <Tooltip>\r\n            <TooltipTrigger>\r\n              <Button variant=\"ghost\" size=\"icon\" onClick={onRefresh}>\r\n                <RefreshCwIcon />\r\n              </Button>\r\n            </TooltipTrigger>\r\n            <TooltipContent>Actualizar</TooltipContent>\r\n          </Tooltip>\r\n\r\n          <Tooltip>\r\n            <TooltipTrigger>\r\n              <Button variant=\"ghost\" size=\"icon\" onClick={onDownload}>\r\n                <DownloadIcon />\r\n              </Button>\r\n            </TooltipTrigger>\r\n            <TooltipContent>Descargar Excel</TooltipContent>\r\n          </Tooltip>\r\n\r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger>\r\n              <Button variant=\"ghost\" size=\"icon\">\r\n                <ColumnsIcon />\r\n              </Button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent align=\"end\">\r\n              <DropdownMenuLabel>Columnas visibles</DropdownMenuLabel>\r\n              <DropdownMenuSeparator />\r\n              {columns\r\n                .filter((col) => col.key !== 'actions')\r\n                .map((column) => (\r\n                  <DropdownMenuCheckboxItem\r\n                    key={column.key}\r\n                    checked={visibleColumns.has(column.key)}\r\n                    onCheckedChange={() => toggleColumnVisibility(column.key)}\r\n                  >\r\n                    {column.label}\r\n                  </DropdownMenuCheckboxItem>\r\n                ))}\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Table Container */}\r\n      <div className=\"flex-1 overflow-auto\">\r\n        <table className=\"w-full border-collapse\" style={{ minWidth: 'max-content' }}>\r\n          <thead className=\"sticky top-0 z-20 bg-[#1a2332] dark:bg-[#0f1a28]\">\r\n            <tr>\r\n              {visibleColumnsArray.map((column) => (\r\n                <th\r\n                  key={column.key}\r\n                  draggable={!column.fixed}\r\n                  onDragStart={(e) => handleDragStart(e, column.key)}\r\n                  onDragOver={handleDragOver}\r\n                  onDrop={(e) => handleDrop(e, column.key)}\r\n                  className={cn(\r\n                    'group relative border-b-2 border-border px-3 py-1.5 text-left text-xs font-medium uppercase tracking-wider text-gray-300 dark:text-gray-400',\r\n                    column.fixed && 'sticky z-30 shadow-[2px_0_4px_rgba(0,0,0,0.05)]',\r\n                    column.key === 'actions' && 'left-0 bg-[#1a2332] dark:bg-[#0f1a28]',\r\n                    column.key === 'id' && 'left-[80px] border-r-2 bg-[#1a2332] dark:bg-[#0f1a28]',\r\n                    draggedColumn === column.key && 'opacity-50',\r\n                  )}\r\n                  style={{\r\n                    width: columnWidths[column.key] || (column.key === 'actions' ? 80 : 'auto'),\r\n                    minWidth: column.key === 'actions' ? 80 : 80,\r\n                  }}\r\n                >\r\n                  <div className=\"flex items-center justify-between gap-2\">\r\n                    <span className=\"flex-1\">{column.label}</span>\r\n                    <div className=\"flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity\">\r\n                      {column.sortable && (\r\n                        <button onClick={() => handleSort(column.key)} className=\"rounded p-0.5 hover:bg-accent/50\">\r\n                          {sortConfig?.key === column.key ? (\r\n                            sortConfig.direction === 'asc' ? <ChevronUpIcon /> : <ChevronDownIcon />\r\n                          ) : (\r\n                            <ChevronUpIcon />\r\n                          )}\r\n                        </button>\r\n                      )}\r\n                      {column.filterable && (\r\n                        <DropdownMenu>\r\n                          <DropdownMenuTrigger>\r\n                            <button className=\"rounded p-0.5 hover:bg-accent/50\">\r\n                              <FilterIcon />\r\n                            </button>\r\n                          </DropdownMenuTrigger>\r\n                          <DropdownMenuContent align=\"start\">\r\n                            <div className=\"p-2\">\r\n                              <Input\r\n                                placeholder={`Filtrar ${column.label}...`}\r\n                                value={columnFilters[column.key] || ''}\r\n                                onChange={(e) => handleFilterChange(column.key, (e.target as HTMLInputElement).value)}\r\n                                className=\"h-8\"\r\n                              />\r\n                              {columnFilters[column.key] && (\r\n                                <Button\r\n                                  variant=\"ghost\"\r\n                                  size=\"sm\"\r\n                                  onClick={() => clearFilter(column.key)}\r\n                                  className=\"mt-2 w-full\"\r\n                                >\r\n                                  Limpiar filtro\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </DropdownMenuContent>\r\n                        </DropdownMenu>\r\n                      )}\r\n                      {column.key !== 'actions' && (\r\n                        <button\r\n                          onClick={() => toggleColumnVisibility(column.key)}\r\n                          className=\"rounded p-0.5 hover:bg-accent/50\"\r\n                        >\r\n                          <EyeOffIcon />\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {column.key !== 'actions' && (\r\n                    <div\r\n                      className=\"absolute right-0 top-0 h-full w-1 cursor-col-resize hover:bg-primary/50\"\r\n                      onMouseDown={(e) => handleResizeStart(e, column.key)}\r\n                    />\r\n                  )}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {paginatedData.map((row, rowIndex) => {\r\n              const expired = row.date && isBefore(parseISO(row.date), new Date());\r\n              return (\r\n                <tr\r\n                  key={rowIndex}\r\n                  className={cn(\r\n                    'border-b border-border transition-colors hover:bg-muted/50',\r\n                    rowIndex % 2 === 0 ? 'bg-card' : 'bg-muted/20',\r\n                  )}\r\n                >\r\n                  {visibleColumnsArray.map((column) => (\r\n                    <td\r\n                      key={column.key}\r\n                      className={cn(\r\n                        'px-3 py-1.5 text-sm',\r\n                        column.fixed && 'sticky z-10',\r\n                        column.key === 'actions' && 'left-0',\r\n                        column.key === 'id' && 'left-[80px] border-r-2',\r\n                        column.fixed && (rowIndex % 2 === 0 ? 'bg-card' : 'bg-neutral-100 dark:bg-neutral-800'),\r\n                        column.type === 'currency' && 'text-right tabular-nums',\r\n                        column.type === 'date' && expired && 'bg-red-50/50 dark:bg-red-950/20',\r\n                      )}\r\n                      style={{\r\n                        width: columnWidths[column.key] || (column.key === 'actions' ? 80 : 'auto'),\r\n                      }}\r\n                    >\r\n                      {column.key === 'actions' ? (\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <Button\r\n                            variant=\"ghost\"\r\n                            size=\"icon\"\r\n                            onClick={() => onQuickAction && onQuickAction(row)}\r\n                            className=\"h-6 w-6\"\r\n                          >\r\n                            <ZapIcon />\r\n                          </Button>\r\n                          <DropdownMenu>\r\n                            <DropdownMenuTrigger>\r\n                              <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6\">\r\n                                <MoreVerticalIcon />\r\n                              </Button>\r\n                            </DropdownMenuTrigger>\r\n                            <DropdownMenuContent align=\"end\">\r\n                              <DropdownMenuItem onClick={() => onView && onView(row)}>Ver</DropdownMenuItem>\r\n                              <DropdownMenuItem onClick={() => onEdit && onEdit(row)}>Editar</DropdownMenuItem>\r\n                              <DropdownMenuSeparator />\r\n                              <DropdownMenuItem onClick={() => onDelete && onDelete(row)} className=\"text-destructive\">\r\n                                Eliminar\r\n                              </DropdownMenuItem>\r\n                            </DropdownMenuContent>\r\n                          </DropdownMenu>\r\n                        </div>\r\n                      ) : column.key === 'id' ? (\r\n                        <div className=\"flex items-center gap-2\">\r\n                          {enableHyperlinks ? (\r\n                            <a\r\n                              href=\"#\"\r\n                              onClick={(e) => {\r\n                                e.preventDefault();\r\n                                onView && onView(row);\r\n                              }}\r\n                              className=\"flex-1 text-left font-bold hover:text-blue-700 hover:underline dark:text-blue-400 dark:hover:text-blue-300 text-blue-900\"\r\n                            >\r\n                              {row[column.key]}\r\n                            </a>\r\n                          ) : (\r\n                            <span className=\"flex-1\">{row[column.key]}</span>\r\n                          )}\r\n                        </div>\r\n                      ) : (\r\n                        formatValue(row[column.key], column.type)\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n          <tfoot className=\"sticky bottom-0 z-20 bg-card shadow-[0_-2px_4px_rgba(0,0,0,0.05)]\">\r\n            <tr className=\"border-t-2 border-border\">\r\n              {visibleColumnsArray.map((column, index) => (\r\n                <td\r\n                  key={column.key}\r\n                  className={cn(\r\n                    'px-3 py-1.5 text-sm font-semibold',\r\n                    column.fixed && 'sticky z-30 bg-card shadow-[2px_0_4px_rgba(0,0,0,0.05)]',\r\n                    column.key === 'actions' && 'left-0',\r\n                    column.key === 'id' && 'left-[80px] border-r-2',\r\n                    column.type === 'currency' && 'text-right tabular-nums',\r\n                  )}\r\n                  style={{\r\n                    width: columnWidths[column.key] || (column.key === 'actions' ? 80 : 'auto'),\r\n                  }}\r\n                >\r\n                  {index === 1\r\n                    ? 'Totales'\r\n                    : column.type === 'currency'\r\n                      ? new Intl.NumberFormat('es-ES').format(totals[column.key] || 0)\r\n                      : ''}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      <div className=\"flex flex-col gap-3 border-t border-border bg-card px-4 py-3 sm:flex-row sm:items-center sm:justify-between\">\r\n        <div className=\"flex flex-col gap-2 sm:flex-row sm:items-center sm:gap-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <span className=\"text-sm text-muted-foreground\">Filas por página:</span>\r\n            <Select value={String(itemsPerPage)} onValueChange={(value) => setItemsPerPage(Number(value))}>\r\n              <SelectTrigger className=\"h-8 w-[100px]\">\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {[5, 10, 15, 20, 50, 100, 200].map((size) => (\r\n                  <SelectItem key={size} value={String(size)}>\r\n                    {size}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n          <div className=\"text-sm text-muted-foreground\">\r\n            Mostrando {startIndex + 1} a {Math.min(endIndex, sortedData.length)} de {sortedData.length} registros\r\n            {activeFiltersCount > 0 &&\r\n              ` (${activeFiltersCount} filtro${activeFiltersCount > 1 ? 's' : ''} activo${activeFiltersCount > 1 ? 's' : ''})`}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"icon\"\r\n            onClick={() => setCurrentPage(1)}\r\n            disabled={currentPage === 1}\r\n            className=\"h-8 w-8\"\r\n          >\r\n            <ChevronsLeftIcon />\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"icon\"\r\n            onClick={() => setCurrentPage((prev) => Math.max(1, prev - 1))}\r\n            disabled={currentPage === 1}\r\n            className=\"h-8 w-8\"\r\n          >\r\n            <ChevronLeftIcon />\r\n          </Button>\r\n          <span className=\"text-sm\">\r\n            Página {currentPage} de {totalPages}\r\n          </span>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"icon\"\r\n            onClick={() => setCurrentPage((prev) => Math.min(totalPages, prev + 1))}\r\n            disabled={currentPage === totalPages}\r\n            className=\"h-8 w-8\"\r\n          >\r\n            <ChevronRightIcon />\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"icon\"\r\n            onClick={() => setCurrentPage(totalPages)}\r\n            disabled={currentPage === totalPages}\r\n            className=\"h-8 w-8\"\r\n          >\r\n            <ChevronsRightIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nEnterpriseDataGrid.displayName = 'EnterpriseDataGrid';\r\n\r\nexport default EnterpriseDataGrid;"],"names":["e","Object","cn","classes","Boolean","isBefore","a","b","ChevronUpIcon","ChevronDownIcon","FilterIcon","MoreVerticalIcon","ZapIcon","RefreshCwIcon","DownloadIcon","AlertCircleIcon","ColumnsIcon","EyeOffIcon","ChevronLeftIcon","ChevronRightIcon","ChevronsLeftIcon","ChevronsRightIcon","Button","React","className","variant","size","props","ref","Badge","DropdownMenu","children","open","setOpen","useState","child","DropdownMenuTrigger","DropdownMenuContent","align","useRef","useEffect","handleClickOutside","event","document","DropdownMenuItem","onClick","DropdownMenuCheckboxItem","checked","onCheckedChange","DropdownMenuSeparator","DropdownMenuLabel","Tooltip","TooltipTrigger","TooltipContent","Input","Select","value","onValueChange","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","EnterpriseDataGrid","initialColumns","data","enableHyperlinks","onView","onEdit","onDelete","onQuickAction","onRefresh","onDownload","defaultColumns","columns","setColumns","sortConfig","setSortConfig","draggedColumn","setDraggedColumn","columnFilters","setColumnFilters","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","visibleColumns","setVisibleColumns","Set","col","columnWidths","setColumnWidths","resizingColumn","setResizingColumn","startX","setStartX","startWidth","setStartWidth","handleDragOver","handleMouseMove","newWidth","Math","prev","handleMouseUp","sortedData","row","key","filterValue","cellValue","String","aValue","bValue","column","aNum","Number","bNum","aDate","Date","bDate","aStr","bStr","totalPages","startIndex","endIndex","paginatedData","visibleColumnsArray","totals","total","sum","v","toggleColumnVisibility","columnKey","s","activeFiltersCount","handleDrop","targetColumnKey","newColumns","draggedIndex","targetIndex","removed","direction","newFilters","rowIndex","expired","formatValue","type","day","month","year","hours","minutes","date","Intl","index"],"mappings":"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"}