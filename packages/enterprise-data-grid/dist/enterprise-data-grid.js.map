{"version":3,"file":"enterprise-data-grid.js","sources":["webpack://SiticGridEnterpriseDataGrid/./src/EnterpriseDataGrid.tsx","webpack://SiticGridEnterpriseDataGrid/webpack/runtime/compat_get_default_export","webpack://SiticGridEnterpriseDataGrid/webpack/runtime/define_property_getters","webpack://SiticGridEnterpriseDataGrid/webpack/runtime/has_own_property"],"sourcesContent":["import React, { forwardRef, useState, useMemo, useCallback } from 'react';\r\n\r\n// Iconos SVG simples para reemplazar lucide-react\r\nconst ChevronDownIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <polyline points=\"6,9 12,15 18,9\"></polyline>\r\n  </svg>\r\n);\r\n\r\nconst ChevronUpIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <polyline points=\"18,15 12,9 6,15\"></polyline>\r\n  </svg>\r\n);\r\n\r\nconst SearchIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n    <path d=\"m21 21-4.35-4.35\"></path>\r\n  </svg>\r\n);\r\n\r\nconst FilterIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <polygon points=\"22,3 2,3 10,12.46 10,19 14,21 14,12.46\"></polygon>\r\n  </svg>\r\n);\r\n\r\nconst SettingsIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n    <path d=\"M12 1v6m0 6v6m11-7h-6m-6 0H1\"></path>\r\n  </svg>\r\n);\r\n\r\nconst DownloadIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n    <polyline points=\"7,10 12,15 17,10\"></polyline>\r\n    <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\r\n  </svg>\r\n);\r\n\r\n// Tipos e interfaces\r\nexport interface ColumnDefinition {\r\n  key: string;\r\n  header: string;\r\n  width?: number;\r\n  sortable?: boolean;\r\n  filterable?: boolean;\r\n  type?: 'text' | 'number' | 'date' | 'boolean';\r\n  render?: (value: any, row: any) => React.ReactNode;\r\n}\r\n\r\nexport interface SortConfig {\r\n  key: string;\r\n  direction: 'asc' | 'desc';\r\n}\r\n\r\nexport interface FilterConfig {\r\n  [key: string]: string;\r\n}\r\n\r\nexport interface PaginationConfig {\r\n  page: number;\r\n  pageSize: number;\r\n  total: number;\r\n}\r\n\r\nexport interface EnterpriseDataGridProps {\r\n  data: any[];\r\n  columns: ColumnDefinition[];\r\n  loading?: boolean;\r\n  error?: string | null;\r\n  pagination?: PaginationConfig;\r\n  searchable?: boolean;\r\n  filterable?: boolean;\r\n  exportable?: boolean;\r\n  selectable?: boolean;\r\n  className?: string;\r\n  onSort?: (sortConfig: SortConfig) => void;\r\n  onFilter?: (filters: FilterConfig) => void;\r\n  onPageChange?: (page: number) => void;\r\n  onPageSizeChange?: (pageSize: number) => void;\r\n  onRowSelect?: (selectedRows: any[]) => void;\r\n  onExport?: () => void;\r\n}\r\n\r\n// Función de formateo de fecha simple\r\nconst formatDate = (date: Date | string) => {\r\n  if (!date) return '';\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  return d.toLocaleDateString('es-ES');\r\n};\r\n\r\n// Función de formateo de número\r\nconst formatNumber = (value: number) => {\r\n  if (typeof value !== 'number') return value;\r\n  return value.toLocaleString('es-ES');\r\n};\r\n\r\nexport const EnterpriseDataGrid = forwardRef<HTMLDivElement, EnterpriseDataGridProps>(({\r\n  data = [],\r\n  columns = [],\r\n  loading = false,\r\n  error = null,\r\n  pagination,\r\n  searchable = true,\r\n  filterable = true,\r\n  exportable = true,\r\n  selectable = false,\r\n  className = '',\r\n  onSort,\r\n  onFilter,\r\n  onPageChange,\r\n  onPageSizeChange,\r\n  onRowSelect,\r\n  onExport,\r\n  ...props\r\n}, ref) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortConfig, setSortConfig] = useState<SortConfig | null>(null);\r\n  const [filters, setFilters] = useState<FilterConfig>({});\r\n  const [selectedRows, setSelectedRows] = useState<Set<number>>(new Set());\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [columnVisibility, setColumnVisibility] = useState<{[key: string]: boolean}>(() => {\r\n    const initial: {[key: string]: boolean} = {};\r\n    columns.forEach(col => {\r\n      initial[col.key] = true;\r\n    });\r\n    return initial;\r\n  });\r\n\r\n  // Filtrado y ordenamiento de datos\r\n  const processedData = useMemo(() => {\r\n    let filtered = [...data];\r\n\r\n    // Aplicar búsqueda global\r\n    if (searchTerm && searchable) {\r\n      filtered = filtered.filter(row =>\r\n        Object.values(row).some(value =>\r\n          String(value).toLowerCase().includes(searchTerm.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n\r\n    // Aplicar filtros por columna\r\n    if (filterable) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value) {\r\n          filtered = filtered.filter(row =>\r\n            String(row[key]).toLowerCase().includes(value.toLowerCase())\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    // Aplicar ordenamiento\r\n    if (sortConfig) {\r\n      filtered.sort((a, b) => {\r\n        const aValue = a[sortConfig.key];\r\n        const bValue = b[sortConfig.key];\r\n        \r\n        if (aValue < bValue) {\r\n          return sortConfig.direction === 'asc' ? -1 : 1;\r\n        }\r\n        if (aValue > bValue) {\r\n          return sortConfig.direction === 'asc' ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  }, [data, searchTerm, filters, sortConfig, searchable, filterable]);\r\n\r\n  // Paginación\r\n  const paginatedData = useMemo(() => {\r\n    if (!pagination) return processedData;\r\n    \r\n    const startIndex = (pagination.page - 1) * pagination.pageSize;\r\n    const endIndex = startIndex + pagination.pageSize;\r\n    return processedData.slice(startIndex, endIndex);\r\n  }, [processedData, pagination]);\r\n\r\n  // Manejo de ordenamiento\r\n  const handleSort = useCallback((key: string) => {\r\n    const column = columns.find(col => col.key === key);\r\n    if (!column?.sortable) return;\r\n\r\n    const newSortConfig: SortConfig = {\r\n      key,\r\n      direction: sortConfig?.key === key && sortConfig.direction === 'asc' ? 'desc' : 'asc'\r\n    };\r\n\r\n    setSortConfig(newSortConfig);\r\n    onSort?.(newSortConfig);\r\n  }, [columns, sortConfig, onSort]);\r\n\r\n  // Manejo de filtros\r\n  const handleFilter = useCallback((key: string, value: string) => {\r\n    const newFilters = { ...filters, [key]: value };\r\n    setFilters(newFilters);\r\n    onFilter?.(newFilters);\r\n  }, [filters, onFilter]);\r\n\r\n  // Manejo de selección\r\n  const handleRowSelect = useCallback((index: number) => {\r\n    if (!selectable) return;\r\n\r\n    const newSelection = new Set(selectedRows);\r\n    if (newSelection.has(index)) {\r\n      newSelection.delete(index);\r\n    } else {\r\n      newSelection.add(index);\r\n    }\r\n\r\n    setSelectedRows(newSelection);\r\n    const selectedData = Array.from(newSelection).map(idx => paginatedData[idx]);\r\n    onRowSelect?.(selectedData);\r\n  }, [selectable, selectedRows, paginatedData, onRowSelect]);\r\n\r\n  // Seleccionar todos\r\n  const handleSelectAll = useCallback(() => {\r\n    if (!selectable) return;\r\n\r\n    const allSelected = selectedRows.size === paginatedData.length;\r\n    const newSelection = allSelected ? new Set<number>() : new Set(paginatedData.map((_, idx) => idx));\r\n    \r\n    setSelectedRows(newSelection);\r\n    const selectedData = Array.from(newSelection).map(idx => paginatedData[idx]);\r\n    onRowSelect?.(selectedData);\r\n  }, [selectable, selectedRows, paginatedData, onRowSelect]);\r\n\r\n  // Columnas visibles\r\n  const visibleColumns = useMemo(() => {\r\n    return columns.filter(col => columnVisibility[col.key]);\r\n  }, [columns, columnVisibility]);\r\n\r\n  const renderCellContent = useCallback((column: ColumnDefinition, value: any, row: any) => {\r\n    if (column.render) {\r\n      return column.render(value, row);\r\n    }\r\n\r\n    switch (column.type) {\r\n      case 'date':\r\n        return formatDate(value);\r\n      case 'number':\r\n        return formatNumber(value);\r\n      case 'boolean':\r\n        return value ? 'Sí' : 'No';\r\n      default:\r\n        return String(value || '');\r\n    }\r\n  }, []);\r\n\r\n  if (error) {\r\n    return (\r\n      <div ref={ref} className={`p-4 border border-red-300 rounded-lg bg-red-50 ${className}`} {...props}>\r\n        <div className=\"text-red-800\">\r\n          <h3 className=\"font-medium\">Error al cargar los datos</h3>\r\n          <p className=\"text-sm mt-1\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div ref={ref} className={`bg-white rounded-lg shadow-sm border border-gray-200 ${className}`} {...props}>\r\n      {/* Toolbar */}\r\n      <div className=\"p-4 border-b border-gray-200\">\r\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-between items-start sm:items-center\">\r\n          <div className=\"flex flex-col sm:flex-row gap-2 flex-1\">\r\n            {searchable && (\r\n              <div className=\"relative\">\r\n                <SearchIcon />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Buscar...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none\"\r\n                />\r\n                <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\">\r\n                  <SearchIcon />\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {filterable && (\r\n              <button\r\n                onClick={() => setShowFilters(!showFilters)}\r\n                className={`flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors ${\r\n                  showFilters ? 'bg-blue-50 border-blue-300 text-blue-700' : ''\r\n                }`}\r\n              >\r\n                <FilterIcon />\r\n                Filtros\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex gap-2\">\r\n            <button\r\n              onClick={() => setColumnVisibility(prev => {\r\n                const newState = { ...prev };\r\n                const allVisible = Object.values(newState).every(v => v);\r\n                columns.forEach(col => {\r\n                  newState[col.key] = !allVisible;\r\n                });\r\n                return newState;\r\n              })}\r\n              className=\"flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\r\n            >\r\n              <SettingsIcon />\r\n              Columnas\r\n            </button>\r\n            \r\n            {exportable && (\r\n              <button\r\n                onClick={onExport}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n              >\r\n                <DownloadIcon />\r\n                Exportar\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filtros por columna */}\r\n        {showFilters && filterable && (\r\n          <div className=\"mt-4 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 p-4 bg-gray-50 rounded-lg\">\r\n            {columns.filter(col => col.filterable).map(column => (\r\n              <div key={column.key}>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  {column.header}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder={`Filtrar ${column.header.toLowerCase()}...`}\r\n                  value={filters[column.key] || ''}\r\n                  onChange={(e) => handleFilter(column.key, e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none text-sm\"\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Tabla */}\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"w-full\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              {selectable && (\r\n                <th className=\"px-4 py-3 text-left\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedRows.size === paginatedData.length && paginatedData.length > 0}\r\n                    onChange={handleSelectAll}\r\n                    className=\"rounded border-gray-300 focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </th>\r\n              )}\r\n              {visibleColumns.map(column => (\r\n                <th\r\n                  key={column.key}\r\n                  className={`px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider ${\r\n                    column.sortable ? 'cursor-pointer hover:bg-gray-100' : ''\r\n                  }`}\r\n                  style={{ width: column.width ? `${column.width}px` : 'auto' }}\r\n                  onClick={() => column.sortable && handleSort(column.key)}\r\n                >\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {column.header}\r\n                    {column.sortable && (\r\n                      <div className=\"flex flex-col\">\r\n                        {sortConfig?.key === column.key ? (\r\n                          sortConfig.direction === 'asc' ? <ChevronUpIcon /> : <ChevronDownIcon />\r\n                        ) : (\r\n                          <div className=\"w-4 h-4 opacity-30\">\r\n                            <ChevronUpIcon />\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {loading ? (\r\n              <tr>\r\n                <td colSpan={visibleColumns.length + (selectable ? 1 : 0)} className=\"px-4 py-8 text-center\">\r\n                  <div className=\"flex items-center justify-center\">\r\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n                    <span className=\"ml-2 text-gray-600\">Cargando...</span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ) : paginatedData.length === 0 ? (\r\n              <tr>\r\n                <td colSpan={visibleColumns.length + (selectable ? 1 : 0)} className=\"px-4 py-8 text-center text-gray-500\">\r\n                  No se encontraron datos\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              paginatedData.map((row, rowIndex) => (\r\n                <tr\r\n                  key={rowIndex}\r\n                  className={`hover:bg-gray-50 ${selectedRows.has(rowIndex) ? 'bg-blue-50' : ''}`}\r\n                >\r\n                  {selectable && (\r\n                    <td className=\"px-4 py-3\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedRows.has(rowIndex)}\r\n                        onChange={() => handleRowSelect(rowIndex)}\r\n                        className=\"rounded border-gray-300 focus:ring-2 focus:ring-blue-500\"\r\n                      />\r\n                    </td>\r\n                  )}\r\n                  {visibleColumns.map(column => (\r\n                    <td key={column.key} className=\"px-4 py-3 text-sm text-gray-900\">\r\n                      {renderCellContent(column, row[column.key], row)}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Paginación */}\r\n      {pagination && (\r\n        <div className=\"px-4 py-3 border-t border-gray-200 bg-gray-50\">\r\n          <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4\">\r\n            <div className=\"flex items-center gap-2 text-sm text-gray-700\">\r\n              <span>Mostrar</span>\r\n              <select\r\n                value={pagination.pageSize}\r\n                onChange={(e) => onPageSizeChange?.(Number(e.target.value))}\r\n                className=\"border border-gray-300 rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none\"\r\n              >\r\n                <option value={10}>10</option>\r\n                <option value={25}>25</option>\r\n                <option value={50}>50</option>\r\n                <option value={100}>100</option>\r\n              </select>\r\n              <span>de {pagination.total} registros</span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={() => onPageChange?.(pagination.page - 1)}\r\n                disabled={pagination.page <= 1}\r\n                className=\"px-3 py-1 border border-gray-300 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\r\n              >\r\n                Anterior\r\n              </button>\r\n              \r\n              <div className=\"flex gap-1\">\r\n                {Array.from({ length: Math.min(5, Math.ceil(pagination.total / pagination.pageSize)) }, (_, i) => {\r\n                  const pageNum = pagination.page - 2 + i;\r\n                  if (pageNum < 1 || pageNum > Math.ceil(pagination.total / pagination.pageSize)) return null;\r\n                  \r\n                  return (\r\n                    <button\r\n                      key={pageNum}\r\n                      onClick={() => onPageChange?.(pageNum)}\r\n                      className={`px-3 py-1 text-sm border rounded ${\r\n                        pageNum === pagination.page\r\n                          ? 'bg-blue-600 text-white border-blue-600'\r\n                          : 'border-gray-300 hover:bg-gray-100'\r\n                      }`}\r\n                    >\r\n                      {pageNum}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              <button\r\n                onClick={() => onPageChange?.(pagination.page + 1)}\r\n                disabled={pagination.page >= Math.ceil(pagination.total / pagination.pageSize)}\r\n                className=\"px-3 py-1 border border-gray-300 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\r\n              >\r\n                Siguiente\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nEnterpriseDataGrid.displayName = 'EnterpriseDataGrid';\r\n\r\nexport default EnterpriseDataGrid;","// getDefaultExport function for compatibility with non-ESM modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};\n","__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))"],"names":["ChevronDownIcon","ChevronUpIcon","SearchIcon","FilterIcon","SettingsIcon","DownloadIcon","EnterpriseDataGrid","e","Object","forwardRef","data","columns","loading","error","pagination","searchable","filterable","exportable","selectable","className","onSort","onFilter","onPageChange","onPageSizeChange","onRowSelect","onExport","props","ref","searchTerm","setSearchTerm","useState","sortConfig","setSortConfig","filters","setFilters","selectedRows","setSelectedRows","Set","showFilters","setShowFilters","columnVisibility","setColumnVisibility","initial","col","processedData","useMemo","filtered","row","value","String","key","a","b","aValue","bValue","paginatedData","startIndex","endIndex","handleSort","useCallback","column","newSortConfig","handleFilter","newFilters","handleRowSelect","index","newSelection","selectedData","Array","idx","handleSelectAll","allSelected","_","visibleColumns","renderCellContent","d","Date","prev","newState","allVisible","v","rowIndex","Number","Math","i","pageNum"],"mappings":"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"}